{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./spa/src/app/app-routing.module.ts","./spa/src/app/app.component.ts","./spa/src/app/app.component.html","./spa/src/app/app.module.ts","./spa/src/environments/environment.ts","./spa/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, EventEmitter } from '@angular/core';\nimport { UploadInput, UploadOutput, UploaderOptions } from 'ngx-uploader';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testapp';\n\n  uploaderOptions: UploaderOptions = {concurrency: 3};\n  uploadInput = new EventEmitter<UploadInput>();\n  tempUploadedFiles = {};\n  files: string[] = [];\n\n  onUploadOutput(output: UploadOutput) : void {\n    \n    if (output.type === 'allAddedToQueue') { // when all files added in queue\n      // uncomment this if you want to auto upload files when added\n      for(const fileId in this.tempUploadedFiles) {\n        const event: UploadInput = {\n          type: 'uploadFile',\n          url: `/api/uploadFile?id=${this.tempUploadedFiles[fileId].id}`,\n          file: this.tempUploadedFiles[fileId],\n          method: 'POST'\n        };\n\n        this.uploadInput.emit(event);        \n      }\n\n    } else if (output.type === 'addedToQueue'  && typeof output.file !== 'undefined') { // add file to array when added\n      this.tempUploadedFiles[output.file.id] = output.file;      \n    } else if (output.type === 'uploading' && typeof output.file !== 'undefined') {\n      // update current data in files array for uploading file\n      this.tempUploadedFiles[output.file.id] = output.file;      \n    } else if (output.type === 'done') {\n\n      //TODO: ovdje se ubacuje kod kojim se uploadani fajl doda u kolekciju koja se onda mo≈æe renderirati (preview)\n      //Zasad samo ispisujem ime fajla\n      this.files.push(output.file.name);\n    }\n    \n  }\n}\n","<input type=\"file\" multiple ngFileSelect [uploadInput]=\"uploadInput\"\n  [options]=\"uploaderOptions\" (uploadOutput)=\"onUploadOutput($event)\">\n\n  <div>\n    <label>Uploaded files</label>\n    <div *ngFor=\"let f of files\">{{f}}</div>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxUploaderModule } from 'ngx-uploader';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxUploaderModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}